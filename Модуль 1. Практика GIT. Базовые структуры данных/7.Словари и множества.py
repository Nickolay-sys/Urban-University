"""
Словарь - колекция хранящая в себе данные по парам ключ-значение
"""
phone_boke = {'Nikolay': [89393141757, 6554645],       # первым указываем ключ, вторым значение. Значение выделяется двоеточием. 
              'Bank': 88005553535,
              'Melon': 984756896}         # ключи не могут быть изменяемыми типами данных, но могут значения       
print(phone_boke)

print(phone_boke['Nikolay'])        # можно вызвать значения словаря по его ключу

phone_boke['Bank'] = 123456789       # Можно изменять значение ключа
print(phone_boke)

phone_boke['Anton'] = 987654321     #  Можно добавлять новые элементы в словарь
print(phone_boke)

del phone_boke['Melon']       # Можно удалять элементы из словаря
print(phone_boke)

"""
Словарь поддерживает работу с методами
"""
phone_boke.update({'Sasha': 1212121212,         # метод .update добавляет пару или пары ключ-значение
                  'Alex': 545454545})
print(phone_boke)
print(phone_boke.get('Melon',       # метод .get возвращает значение по указанному ключу
                     'Такого ключа нет'))        # при отсутсвии ключа выведет none или написаный текст
a = phone_boke.pop('Bank')      # метод .pop удаляет указаный ключ и возвращает его значение. Этим методом можно сохранить значение ключа в переменую
print(phone_boke)
print(a)
list_ = [1, 2, 3]
print(list_)
list_.pop(0)            # метод .pop работает и с индексами
print(list_)
print(phone_boke.keys())        # .keys выводит ключи из словаря
print(phone_boke.values())      # .values выводит значения из словаря
print(phone_boke.items())        # .items выводит пары ключ-значение из словаря


"""
Множество - колекция хранящая в себе уникальные значения. К элементу множества нельзя обратиться по индексу
"""
set_ = {1,2,3,4,5,1,2,3,4, 
        'string', 
        True, 
        (1,2,3)}     # множество. Хранит в себе только уникальное значение разных типов. Выделяется {фигурными скобками}
print(set_)  

list_ = [1,1,1,1,2,3,2,2]
print(list_)
list_ = set(list_)      # можно преобразовывать списки в множества. Во множестве нельзя обращятся по индексам
print(list_)

"""
Множества поддерживают работу с методами
"""
list_.discard(1)       # метод .discard удаляет элемент из множества. В отличии от .remove не будет выдавать ошибку если не будет найден элемент
print(list_)
list_.add(5)            # метод .add добавляет указаный элемент в множество
print(list_)
  