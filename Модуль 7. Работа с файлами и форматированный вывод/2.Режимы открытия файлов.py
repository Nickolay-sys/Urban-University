"""
Файл так же является последовательностью байтов на диске
Для работы с файлами используется стандартный пакет pprint
"""

from pprint import pprint

"""
Работа с файлом проходит в 3 этапа:
    1.Открытие файла
    2.Выполнение действия
    3.Закрытие файла
Для того чтобы открыть файл нужно указать переменную содержащую полное название файла с его расширением(в данном случае .txt)
Открывается файл функцией open() в котором указывается режим открытия
print(file) выведет имя файла, режим работы и кодировку
.read() этот метод выведет содержимое файла
pprint() форматирует вывод данных, делая его более читабельным. К примеру он вместе текстом выводит \n, о чём нужно помнить
    так как именн они переносят текст на другую строчку
Закрывать файл следует из-за многих причин. Изменения сохраняются полсе закрытия файла, 
    у операционной системы есть ограничение на кол-во открытых файлов.
На закрытом файле работать не получится, что логично
"""

name = 'sample.txt'
file = open(name, 'r')      # r - read, w - write, a - append
print(file)
print(file.read())
file.close()

print('\n')
name = 'sample.txt'
file = open(name, 'r')
pprint(file.read())
file.close()

"""
Для того чтобы записать что-нибудь в файл нужно только изменить режим открытия
    и указать методом .write() что именно нужно записать в файл
    Также  стоит понить что в этом режиме содержимое файла перезаписываается с каждым запуском
Если указаного файла нет, то он будет создан автоматически
"""
print('\n')
name_2 = 'sample2.txt'
file = open(name_2, 'w')
file.write('Hello! I from sample2')
file.close()

file = open(name_2, 'r')
print(file.read())
file.close()

"""
Для того чтобы добавить текст к уже существующему не перзаписывая содержимое нужен режим открытия 'a' 
"""
print('\n')
name_3 = 'sample3.txt'
file = open(name_3, 'a')
file.write('Hello world')
file.close()

file = open(name_3, 'r')
print(file.read())
file.close()

"""
А для того чтобы строки не слипались нужно помнить о символе перноса на новую строку
Сделаем «hello world 2», запустим ещё раз. 
Видим, что новый текст просто прилип к старому, поэтому мы обратили внимание на символы переноса на новую строку. 
Если мы хотим грамотно работать с нашим файлом, нужно такие моменты учитывать.
"""

name_3 = 'sample3.txt'
file = open(name_3, 'a')
file.write('\nhello world 2')
file.close()

"""
Эти режимы нужно запомнить. Также существует множество других режимов 
    и чем пытаться все запомнить лучше завести привычку смотреть документацию
Есть комбинированые режимы открытия, есть режимы с бинарными файлами 'ab', 'rb', 'wb' и так далее

Еще есть возможность указать откуда будет вестись чтение или запись в файле
.tell() возвращает положение указателя чтения и записи в файле. До чтения он на одной позиции,
    а после на другой
Если запустить чтение что получим пустую строку так ка указатель находился в конце строки
.seek() устанавливает положение указателя на указаное. И дальнейшая строка начнёт выполнение
    с указаной позиции
"""

name = 'sample2.txt'
file = open(name, 'r')
print(file.tell())
pprint(file.read())

print(file.tell())
pprint(file.read())

print(file.seek(16))
pprint(file.read())
file.close()
